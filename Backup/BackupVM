 <#. SYNOPSIS 
Script para hacer copias de seguridad de las máquinas virtuales.
.DESCIPTION
Script para hacer copias de seguridad de las máquinas virtuales del servidor borrando los directorios  
antiguos de las copias de seguriad en la unidad donde se realiza la misma.
. PARAMETER directorio
Metemos el path donde se encuentra el directorio que queremos explorar
. PARAMETER descontar
Metemos el número de días que queremos descontar a la fecha actual. Con esto borraremos los directorios en los que no se ha escrito
anterior a ese fecha
. PARAMETER copias
Almacenamos los directorios dentro del path indicado
. PARAMETER harddisk
Almacenamos la capacidad de espacio libre que tiene la unidad donde vamos a realizar el backup
. PARAMETER date
Almacenamos la fecha con el formato dd-MMMM-yyyy_HH-mm
. PARAMETER backuppath
Variable donde almacenamos el directorio que creamos para hacer las copias de seuridad
. PARAMETER logfile
Variable donde almacenamos el fichero que creamos para hacer guardar los eventos de las copias de seuridad.
. PARAMETER vms
Variable donde almacenamos las máquinas virtuales que se están ejecutando
. EXAMPLE
#>
$Hostname = hostname
$directorio = "\\server1\directory\Backup"
$Date = Get-Date -Format dd-MMMM-yyyy_HH-mm
$BackupPath = New-Item "\\server1\directory\Backup\HyperV_Export_$Date" -ItemType directory -Force
$Logfile= New-Item "\\server1\directory\Backup\logs\Backup HyperV_$date.txt" -ItemType File -Force
$harddisk = Get-WmiObject -Class win32_logicaldisk |  Where-Object {$_.DeviceID -eq "D:"} |select {$_.freespace/1gb}
if (($harddisk.'$_.freespace/1gb' )-lt 2500 ) {
$copias = Get-ChildItem -Path $directorio -Directory
foreach ($copia in $copias){
    $borrar = $copia.LastWriteTime #tambien podemos usar CreationTime por fecha de creación
    if ($borrar -lt (Get-Date).AddDays((-30))){
    Remove-Item $copia.PSPath -Recurse
    "El directorio $copia.name ha sido borrado"|Out-File $logfile -Append
    
    }
    } 
    }
 

$VMs = Get-VM -ComputerName $Hostname | Where-Object {$_.State -eq "Running"}

 FOREACH ($VM in $VMs) 
{
    $name = $vm | select -ExpandProperty name
    Try {
        Export-VM $VM -Path $BackupPath -ErrorAction Stop -Passthru | Out-File -FilePath $Logfile -Append #Passthru nos muestra el resultado de la operación en pantalla
        $Result = "Success"
        Write-EventLog -LogName Application -Source "Backup HyperV" -EntryType Information -EventId 1 `
            -Message "Hyper-V VMs Export $Result. Exported VMs: $ExportedVMs "
        "The backup from the virtual machines $VM.name is Succesful"|Out-File -FilePath $Logfile -Append
        }
    catch {
    "El resultado del backup de la máquina $VM ha sido erroneo se procede ha realizar una copia de un SnapShot" | Out-File $Logfile 
    $Result = "Failure"
    Write-EventLog -LogName Application -Source "Backup HyperV" -EntryType Warning -EventId 2 -Message `
    "Hyper-V VMs Export $Result. Exported VMs: $ExportedVMs. We procced to second copy from SanpShot" 
    "The backup from the virtual machines $VM.name is Failure, send a SnapShot Copy"|Out-File -FilePath $Logfile -Append
        checkpoint-vm -ComputerName $Hostname -Name $vm.Name -SnapshotName backup_error
        Export-VMSnapshot -Name backup_error -VMName $vm.name -computername $hostname -Path $backuppath -ErrorVariable +err -ErrorAction Stop -Passthru | Out-File -FilePath $Logfile -Append
        Remove-VMSnapshot -Name backup_error -VMName $vm.name -computername $hostname
        $Result = "Success"
        Write-EventLog -LogName Application -Source "Backup HyperV" -EntryType Information -EventId 1 `
                    -Message "Hyper-V VMs Export $Result. Exported VMs: $ExportedVMs "
        "The backup from the virtual machines $name is $Result"|Out-File -FilePath $Logfile -Append        
            catch {
                  $err | out-file -FilePath $Logfile
                      Write-EventLog -LogName Application -Source "Backup HyperV" -EntryType Warning -EventId 2 -Message `
                         "Hyper-V VMs Export $Result. Exported VMs: $ExportedVMs." 
                  Remove-VMSnapshot -Name backup_error -VMName $vm.name -computername $hostname
                  }
}
}


$ExportedVMs = $VMs | Select-Object Name | Out-String

Get-EventLog -LogName Application -Source 'Backup HyperV' -After $DelDate|Format-List|Out-file $Logfile -Append

# Send logs via email
$From = "servers@domain.com"
$To = "administrator@domain.com"
$Subject = "Hyper-V Backup Report on $Hostname $Date $Result"

$Body = "Hyper-V Backup Report on $Hostname $Date <br>"
$Body += "Result: <b>$Result</b> <br>"
$Body += "<br>"
$Body += "Backuped VMs: $ExportedVMs <br>"

$Attachment = $Logfile

$SMTPServer = "domain.mail.protection.outlook.com"
$SMTPPort = "25"

send-MailMessage -From $From -to $To -Subject $Subject `
    -Body $Body -attachments $Attachment -BodyAsHtml -SmtpServer $SMTPServer -port $SMTPPort 
send-MailMessage -From $From -to $To -Subject $Subject `
    -Body $Body -attachments $Attachment -BodyAsHtml -SmtpServer $SMTPServer -port $SMTPPort 
